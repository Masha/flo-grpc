syntax = "proto3";
package lobby;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// Service runs on Flo Lobby servers
// Used by W3Flo.com and Flo Connect
service FloLobby {
  // Lists all nodes
  rpc ListNodes(google.protobuf.Empty) returns (ListNodesReply) {}
  // Lists games
  rpc ListGames(ListGamesRequest) returns (ListGamesReply) {}
  // Creates a new game
  rpc CreateGame(CreateGameRequest) returns (CreateGameReply) {}
  // Joins a game
  rpc JoinGame(JoinGameRequest) returns (JoinGameReply) {}
  // Cancels a game
  rpc CancelGame(CancelGameRequest) returns (google.protobuf.Empty) {}
}

message ListNodesReply { repeated Node nodes = 1; }

message ListGamesRequest {
  google.protobuf.StringValue keyword = 1;
  GameStatus status = 2;
  google.protobuf.BoolValue is_private = 3;
  google.protobuf.BoolValue is_live = 4;
}

message ListGamesReply {
  repeated Game games = 1;
  bool has_more = 2;
}

message CreateGameRequest {
  int32 player_id = 1;
  string name = 2;
  Map map = 3;
  bool is_private = 4;
  bool is_live = 5;
}

message CreateGameReply { Game game = 1; }

message JoinGameRequest {
  int32 game_id = 1;
  int32 player_id = 2;
}

message JoinGameReply { Game game = 1; }

message CancelGameRequest {
  int32 game_id = 1;
  int32 player_id = 2;
}

message Node {
  string name = 1;
  string location = 2;
  string ip_addr = 3;
}

message Game {
  int32 id = 1;
  string name = 2;
  GameStatus status = 3;
  Map map = 4;
  repeated Slot slots = 5;
  Node node = 6;
  bool is_private = 7;
  google.protobuf.Int32Value secret = 8;
  bool is_live = 9;
  PlayerRef created_by = 10;
  google.protobuf.Timestamp started_at = 11;
  google.protobuf.Timestamp ended_at = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
}

message Slot {
  PlayerRef player = 1;
  google.protobuf.UInt32Value player_id = 2;
  uint32 team = 3;
  uint32 color = 4;
  Computer computer = 5;
  uint32 handicap = 6;
  SlotStatus status = 7;
  Race race = 8;
}

enum SlotStatus {
  SlotStatusOpen = 0;
  SlotStatusClosed = 1;
  SlotStatusOccupied = 2;
}

enum Race {
  RaceHuman = 0;
  RaceOrc = 1;
  RaceNightElf = 2;
  RaceUndead = 3;
  RaceRandom = 4;
}

enum Computer {
  ComputerEasy = 0;
  ComputerNormal = 1;
  ComputerInsane = 2;
}

message Map {
  bytes sha1 = 1;
  uint32 checksum = 2;
  string name = 3;
  string description = 4;
  string author = 5;
  string path = 6;
  uint32 width = 7;
  uint32 height = 8;
  repeated MapPlayer players = 9;
  repeated MapForce forces = 10;
}

message MapPlayer {
  string name = 1;
  uint32 type = 2;
  uint32 race = 3;
  uint32 flags = 4;
}

message MapForce {
  string name = 1;
  uint32 flags = 2;
  uint32 player_set = 3;
}

enum GameStatus {
  GameStatusWaiting = 0;
  GameStatusOngoing = 1;
  GameStatusEnded = 2;
}

enum PlayerSource { PlayerSourceBNet = 0; }

message Player {
  int32 id = 1;
  string name = 2;
  PlayerSource source = 3;
  string source_id = 4;
  google.protobuf.StringValue realm = 5;
}

message PlayerRef {
  int32 id = 1;
  string name = 2;
  PlayerSource source = 3;
  google.protobuf.StringValue realm = 5;
}
