syntax = "proto3";
package lobby;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "player.proto";
import "game.proto";

// Service runs on Flo Lobby servers
// Used by W3Flo.com
service FloLobby {
  rpc GetPlayer(GetPlayerRequest) returns (GetPlayerReply) {}
  rpc GetPlayerByToken(GetPlayerByTokenRequest) returns (GetPlayerReply) {}
  rpc UpdateAndGetPlayer(UpdateAndGetPlayerRequest)
      returns (UpdateAndGetPlayerReply) {}
  // Lists all nodes
  rpc ListNodes(google.protobuf.Empty) returns (ListNodesReply) {}
  // Lists games
  rpc ListGames(ListGamesRequest) returns (ListGamesReply) {}
  // Creates a new game
  rpc CreateGame(CreateGameRequest) returns (CreateGameReply) {}
  // Joins a game
  rpc JoinGame(JoinGameRequest) returns (JoinGameReply) {}
  // Creates a join token
  rpc CreateJoinGameToken(CreateJoinGameTokenRequest) returns (CreateJoinGameTokenReply) {}
  // Join a game by token
  rpc JoinGameByToken(JoinGameByTokenRequest) returns (JoinGameReply) {}
  // Leaves a game
  rpc LeaveGame(LeaveGameRequest) returns (google.protobuf.Empty) {}
  // Updates a slot
  rpc UpdateGameSlotSettings(UpdateGameSlotSettingsRequest)
      returns (UpdateGameSlotSettingsReply) {}
  // Cancels a game
  rpc CancelGame(CancelGameRequest) returns (google.protobuf.Empty) {}
  // Imports map checksums
  rpc ImportMapChecksums(ImportMapChecksumsRequest)
      returns (ImportMapChecksumsReply) {}
  rpc SearchMapChecksum(SearchMapChecksumRequest)
      returns (SearchMapChecksumReply) {}
}

message GetPlayerRequest { int32 player_id = 1; }

message GetPlayerByTokenRequest { string token = 1; }

message GetPlayerReply { player.Player player = 1; }

message UpdateAndGetPlayerRequest {
  string name = 1;
  player.PlayerSource source = 2;
  string source_id = 3;
  player.PlayerSourceState source_state = 4;
  google.protobuf.StringValue realm = 5;
}

message UpdateAndGetPlayerReply {
  player.Player player = 1;
  string token = 2;
}

message ListNodesReply { repeated Node nodes = 1; }

message ListGamesRequest {
  google.protobuf.StringValue keyword = 1;
  GameStatusFilter status = 2;
  google.protobuf.BoolValue is_private = 3;
  google.protobuf.BoolValue is_live = 4;
  google.protobuf.Int64Value take = 5;
  google.protobuf.Int32Value since_id = 6;
}

enum GameStatusFilter {
  GameStatusFilterAll = 0;
  GameStatusFilterOpen = 1;
  GameStatusFilterLive = 2;
  GameStatusFilterEnded = 3;
}

message ListGamesReply {
  repeated game.GameEntry games = 1;
  bool has_more = 2;
}

message CreateGameRequest {
  int32 player_id = 1;
  string name = 2;
  game.Map map = 3;
  bool is_private = 4;
  bool is_live = 5;
}

message CreateGameReply { game.Game game = 1; }

message JoinGameRequest {
  int32 game_id = 1;
  int32 player_id = 2;
}

message JoinGameReply { game.Game game = 1; }

message CreateJoinGameTokenRequest {
  int32 game_id = 1;
  int32 player_id = 2;
}

message CreateJoinGameTokenReply {
  string token = 1;
}

message JoinGameByTokenRequest {
  string token = 1;
  int32 player_id = 2;
}

message LeaveGameRequest {
  int32 game_id = 1;
  int32 player_id = 2;
}

message UpdateGameSlotSettingsRequest {
  int32 game_id = 1;
  int32 player_id = 2;
  game.SlotSettings settings = 3;
}

message UpdateGameSlotSettingsReply { repeated game.Slot slots = 1; }

message CancelGameRequest {
  int32 game_id = 1;
  int32 player_id = 2;
}

message Node {
  int32 id = 1;
  string name = 2;
  string location = 3;
  string ip_addr = 4;
  string country_id = 5;
}

message ImportMapChecksumsRequest {
  repeated game.MapChecksumImportItem items = 1;
}

message ImportMapChecksumsReply { uint32 updated = 1; }

message SearchMapChecksumRequest { string sha1 = 1; }

message SearchMapChecksumReply { google.protobuf.UInt32Value checksum = 1; }